<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.dao.EcommentMapper">
    <resultMap id="BaseResultMap" type="com.cn.entity.Ecomment">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="reply" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="createtime" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="replytime" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, reply, content, createtime, replytime, nickname
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from ecomment
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--selectEcomment显示评论留言-->
    <select id="selectEcomment" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ecomment order by createtime desc ;
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ecomment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.cn.entity.Ecomment">
    insert into ecomment (id, reply, content, 
      createtime, replytime, nickname
      )
    values (#{id,jdbcType=INTEGER}, #{reply,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=VARCHAR}, #{replytime,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.cn.entity.Ecomment">
        insert into ecomment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="reply != null">
                reply,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="createtime != null">
                createtime,
            </if>
            <if test="replytime != null">
                replytime,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="reply != null">
                #{reply,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="replytime != null">
                #{replytime,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cn.entity.Ecomment">
        update ecomment
        <set>
            <if test="reply != null">
                reply = #{reply,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="createtime != null">
                createtime = #{createtime,jdbcType=VARCHAR},
            </if>
            <if test="replytime != null">
                replytime = #{replytime,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cn.entity.Ecomment">
    update ecomment
    set reply = #{reply,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      replytime = #{replytime,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>