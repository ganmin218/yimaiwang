<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.dao.EproductMapper">
    <resultMap id="BaseResultMap" type="com.cn.entity.Eproduct">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="price" jdbcType="REAL" javaType="java.lang.Float"/>
            <arg column="stock" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="categoryLevel1Id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="categoryLevel2Id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="categoryLevel3Id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="fileName" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="isDelete" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, description, price, stock, categoryLevel1Id, categoryLevel2Id, categoryLevel3Id, 
    fileName, isDelete
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from eproduct
        where id = #{id,jdbcType=INTEGER}
    </select>

    <!--selectproducts查询所有商品-->
    <select id="selectproducts" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from eproduct
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eproduct
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.cn.entity.Eproduct">
    insert into eproduct (id, name, description, 
      price, stock, categoryLevel1Id, 
      categoryLevel2Id, categoryLevel3Id, fileName, 
      isDelete)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{price,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, #{categorylevel1id,jdbcType=INTEGER}, 
      #{categorylevel2id,jdbcType=INTEGER}, #{categorylevel3id,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, 
      #{isdelete,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.cn.entity.Eproduct">
        insert into eproduct
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="categorylevel1id != null">
                categoryLevel1Id,
            </if>
            <if test="categorylevel2id != null">
                categoryLevel2Id,
            </if>
            <if test="categorylevel3id != null">
                categoryLevel3Id,
            </if>
            <if test="filename != null">
                fileName,
            </if>
            <if test="isdelete != null">
                isDelete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=REAL},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="categorylevel1id != null">
                #{categorylevel1id,jdbcType=INTEGER},
            </if>
            <if test="categorylevel2id != null">
                #{categorylevel2id,jdbcType=INTEGER},
            </if>
            <if test="categorylevel3id != null">
                #{categorylevel3id,jdbcType=INTEGER},
            </if>
            <if test="filename != null">
                #{filename,jdbcType=VARCHAR},
            </if>
            <if test="isdelete != null">
                #{isdelete,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cn.entity.Eproduct">
        update eproduct
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=REAL},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="categorylevel1id != null">
                categoryLevel1Id = #{categorylevel1id,jdbcType=INTEGER},
            </if>
            <if test="categorylevel2id != null">
                categoryLevel2Id = #{categorylevel2id,jdbcType=INTEGER},
            </if>
            <if test="categorylevel3id != null">
                categoryLevel3Id = #{categorylevel3id,jdbcType=INTEGER},
            </if>
            <if test="filename != null">
                fileName = #{filename,jdbcType=VARCHAR},
            </if>
            <if test="isdelete != null">
                isDelete = #{isdelete,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cn.entity.Eproduct">
    update eproduct
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      categoryLevel1Id = #{categorylevel1id,jdbcType=INTEGER},
      categoryLevel2Id = #{categorylevel2id,jdbcType=INTEGER},
      categoryLevel3Id = #{categorylevel3id,jdbcType=INTEGER},
      fileName = #{filename,jdbcType=VARCHAR},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>